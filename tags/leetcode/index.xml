<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>leetcode on 玖月的博客</title>
    <link>https://gangsusu.github.io/tags/leetcode/</link>
    <description>Recent content in leetcode on 玖月的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 21 Oct 2021 09:00:00 +0800</lastBuildDate><atom:link href="https://gangsusu.github.io/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>二叉树的层序遍历</title>
      <link>https://gangsusu.github.io/post/2021-10-21-php-tree-node/</link>
      <pubDate>Thu, 21 Oct 2021 09:00:00 +0800</pubDate>
      
      <guid>https://gangsusu.github.io/post/2021-10-21-php-tree-node/</guid>
      <description>leetcode第102题 给你一个二叉树，请你返回按照层序遍历得到的节点值。（即逐层地，从左到右访问所有节点） 示例： 二叉树：[3,9,20,null,null,15,7],
 3/ \9 20/ \15 7返回其层序遍历结果：
[ [3], [9,20], [15,7] ]
&amp;lt;?php /** * Definition for a binary tree node. * class TreeNode { * public $val = null; * public $left = null; * public $right = null; * function __construct($val = 0, $left = null, $right = null) { * $this-&amp;gt;val = $val; * $this-&amp;gt;left = $left; * $this-&amp;gt;right = $right; * } * } */ class Solution { /** * @param TreeNode $root * @return Integer[][] */ function levelOrder($root) { //定义返回值  $res = []; //边界值的处理  if (!</description>
    </item>
    
  </channel>
</rss>
